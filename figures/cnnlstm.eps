%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 469.000000 221.000000
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 469 221
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 469 221
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: PingFangSC-Regular
%!FontType1-1.0: AAAAAO+PingFangHK-Regular 001.003%%CreationDate: 3/25/19% Copyright 2019 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (001.003) readonly def/FullName (PingFangHK-Regular) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -150 def/UnderlineThickness 58 defend readonly def/FontName /AAAAAO+PingFangHK-Regular def/PaintType 0 def/FontType 1 def/FontMatrix [0.0010 0 0 0.0010 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 1 /gid122 putdup 2 /gid1602 putdup 3 /gid1674 putdup 4 /gid2322 putdup 5 /gid2678 putdup 6 /gid3379 putdup 7 /gid3576 putdup 8 /gid6924 putdup 9 /gid6963 putdup 10 /gid7623 putreadonly def/FontBBox {-92 -232 1146 972} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEBCD733EC3686D1BE04DD7A740E7D3C5D7A9AD72FC38F378F8E8E79BED62BAE00987484647D62338FBFD2764E4766ECDA57C8A75BA66BAF8917047038EB31B20ED0726C6B33BA9099D4F5E55335A1AB0C646BE9A014E0057560DFD3DA5C885F668F2A073CAB5CDD0904AD920C4DB457D28B33D9AC6F50AEE8BD477351CC5249ECEEC7625F8DC4B9103B3BA79C8CD2037D611ABACF689BD4844CC57B19930F8F2FC0F5C741AC8830898F69CF37542789199ACEF7FD619DCB28826B984BD440DF39D105F7AE53ABB4D95488CDC428C02D83D4E8717AEBD655174BB9A1E99991BAA588472B8CCB11F1011571915190C5FC350EA441CA4EA382AB94AE8D143AC161789EC8A7A451A776318E374578EE5C02AC4090CC983A0D9A6B080439313C1FBAADDB1126051839CCA3BBBF6336BDD934D9EDB88C1AEEA8701F7B98138D39C183C7EC3AFCAC5ED8272177610EF74244FE4DF5DF892130C39AAA13725D9B561844CB696F99E75D101DCA33B2EC1C44531E9E39B069FE27B0A3BD061F824380051DE3A84C44837F0A999A51B40C5A3F37816C0B6B44D2242463319FC6F36E42EE7DE120709EF148D05407090FCF3852F9B63A5F4FCE515C8D9AED9B92F888A24B6022735044FBECDA65F38623D0006D3DCC6A9A7288531311A44035D457837B97044FB3BEDA45C982EA744831927E8523B4DE83BF86EA5B5CD2BA10A0B8E65B4D247E7AA51DB8CCF4582A34CE6B01DC3F9034407B811156E83ABD0F8D12A9C80E6A63898EAEC97A179C398B15A38571AE2064C0679B077A3974B7059DF251FAA38145D44083E1370F5B46C06EC5FE5B99F914F37644D6CEA0059C1B4012C63FED95C14142D1A6980094713606FEC77BF74DDD5AFBAD782451F5595CD7F4829FA06286C963A5C724A9B6B3D15A93122F880073D4307212CD2F43A4134394360CDBBBAE70864FCAA56EA9F63F7D7D506968BF250FA69D55C008B7BB4B43B91D12AEB880015F11BFEA2747523AFCC27368473F900FABBB8D83D8AD2E1D1CB56568B59926CF4CD383C5895015011128E32B7A521EEE540C0586EECA384DF8164B6FD6BACCC480CAFD3DAE51C78510A007BE1CA33A47107CE603B14B10E4BF9F5FE9166C4AA0893C38BA3D58DDAAE42205370A1460CE0E381E163E8AE26EA96920706601C524B93BC7DEA7C2B3D294E8994E632B952AFD65F0A159C9EB03EE90A5C81DE8CF47C61140EEBCEF4BDABC766216C6D213EBEA18D5C45F8BB9695CC2CFD95023203484491D73D70207527005F713BF97A3406FB61FC45FB01B8CA1ADCB39447DCA84FD698E977FC2F808BD19DB164097509559A0ECC1120CC33E4E73D571100EC9AF08DA5B164787F11EDEEA0E5532449A729C6E13D31DEA91C62427C419D5F76C5C5A87D502218EECBA255C187AB89560235FC8CA665DD628D02E41334A742289E06C04E02781163278B56B67312A73CDE706B32F07C682A5E2B53393649763CB99BF9F8A4E1001B693ED92936DBE6EA4232492B7E66FBAD383A50DA3514DE725EC56F299813D9E6AE7ABD7AEE44F14028C9DFCF197FF6A6916F8CCC6D3B4AF8295DDF35F43A14742F8B76569F4035AE43A69B300AE684482A8D1AB58F5D84EB2190379CE37F04A68A275B5AE7E2AB7107259DBAEA2F04CC1167711F7176DDEEC487DE9F2DF64D775EFA11CC6DA90C15B6E990D07CCE28451BC78005CA2A77F4286DAC7F6B3A4127A98C544B15A83463A25EAD6CE8EE60989E4450499B95176E88A48F65C23514D6A56F98B22AAEA0C0A8FC0BAE1723B6F07AAFA6BA6F1699C76747873CDB788A57296296FFE48A0B7B3475013369EC9FA905D9F06CD17CBC36BD9A8793E38A6BD1CDE30D7AFDDAEFDAE699CEC02B6B090AF124D526F11D61929927A020DD6330C346366CFC34B241837C683003E93C1B9F41DEF0E9ABA0D168913B6F06784DE22E3ED5FEC74D1B5D8ADF27CA4F26A31BE2EA51D4B07C8FEF6301254C202218F7EBA250138366A8020815C2A48AEF773C1848E4FC250921FB1E90D032311859BB991C5115B7813A1DEC8814DEB1249667B27984D238D14F593A58E9297AFAF277306A8A48DF4B495E8CA74556571ED8FC0DA6D28131BE0918EB698CB66977E5192C6BD63017163C44C54F5302444EAC96A9E5A13B493EECC6A7FC631294DB4099393EBD615E022A044FB50B7FBB3E6500EA2983AE214974889482067895FCEFD1FD4631DE26F47D136352769FDF3A37B23ECE40D6B8DE5F8AD9F24F8D79D0C3BEABF329198816AECD175FA7019D2D533CF983112FFFC67C7FB3CDCBA0E220CA8287214B4EDE6BD0B3C54D71118D61C549BC91C2E15A17B551229A89458DA9D3EC5C9EDE908C6A797639B1E093C6D380F3DAB6D5DAA6A9EB92154BC6715A7B60709E21044A9C78E744950DCBDF9E79529D8887E2B3E0C82A453B52B1E10A218AFC368148B7DBDA6977822664F9F9E3745076F2F9B85E2A78D480D1D99EA9E0C515612A56D31BB264B66E48986E25DCB96FED0D1A5A17F92830783BA1F5A6A025EA9E7CB2EB7D32F47EBB4D71B5E5BCAE6665E76E7911ADD77D13D0FF2408056E452EC44DC2AAA7EEEE7AE26AA8D895E0769D87277B9877395619B09246533B0284F243A091B186ED19358F22237D54FA8BD43AD6EF45DAB87D351095722E3871CBE6E7BC17CF58A1B52B176AF887F2B18DB72BDEA02655B3E21E9ED5F44683CD9215E9FB01B8D86BB17EA820B2B7A13E5B998AB65BE2E0BE72D0677A75466A50E0FF1C9A66144E619378B15FC2FF0D3F2ADCBB7D95FBEF07FD92B566089DEBB6E1A2284AC5BF06D40B53CE1C668B8439A0DAB789FAD562BE50C1D6FAC162490A0FE0F2CA1FE04542FD0326ABFA19AC6AD8067AC1E2C59FEC6D3EEB88017C0F69BC452B7043969C0583E5F1983C055C8B904B95AB82258278EC8675A9326F7FC70F153C3DDDC5A4C3EEC31D647BAADF217CD3EA5793677E2A6E43ACA4CB7CC47D6B29E0E1A424DDDD103AADAE94815CD3171151423DEE6FB5F93F8B3E634037491E9264BCA2646E56A15A0276A894795A5661D1C690523E6CA4D52406284D93F403196593031B262EBB65676F66F3C42DDE1EDBA7C417E76B1B6CD10827597C2AA050FB85796F0FCA62985A5D1C8A5A24DBD591CAE9210E62F8C3DA4CF00A5D2DA2B356CDA684132C7B7FBAA03A687A5123F14ECB238632BF5729CEA66F950300FC4E09180D5FC0BD46C9C923F887ABAB38D6B6390EAAB7C09C8EE62C3A870FB8C07080FA7B15001D83CBAE29ACDAF36F053ED46320FFF9332B3F2754E0133A643384363E85E9D49EBF52F239CB53C5598C5496497951F2F48F2369B17015D655B2695EB6DF789A9B7B93FFBA24A3D7A3D1D4D6B5CCE5B534838FE26FB83025E2AF7A057E79407DB693AD51C1D30660E2A97C13283634F4E39B3EFEEDE4E9159E1E9DB35D1017EB2459BBCB14D134024699B52EFDE46267DB4A765F61A594B21E818F266CFBBDB2779AD9314F43C17106C61A8D7DF5B0B9AE123FF86E4C96B91B6312612C5CAA70BD22B6BE6A9AACCBD54A69E3FBD7A59D4D7E1062BBBAE9C896D0562C1EE5D43F5C2D4DDE0A600D869F78D8B43E33F4145F7F97D38C0BE6D0F59486D364F796AA01C9AA89DD9B17F8F90FD9213FBEF633F46229B1AAC21F26C8630746201F48E66A7909800C7FAE6EC62712220601222E3C32F53D66970FE823C64FA7A55B61379F66A5027AAA1CB3FE5039140DBA6ADE9B93621D1EEFBBA040993D8379E24CCAE641CD28EA42F287A90299A510C3C0C5A98369A10404C46973320A7A59726B68F0EAD400BFA5C90057990025C597F780FD81308663D59E07EE875ED14A3D4F20DE5C6CF23AB1E0FF7C909BCCE9F3F06E4264DE433FC838857CEC2633967CBBBDE72281FDA1DC7374337D72430C6EA31121DE0E91D815E0B0C3529324E9C3D055FBE0CE5F21211EFAF722ED1A6161EE0EA9A45ED514BCA8138A18C15DE9501F4944E12A446418BDF2A77AED0B645020B7C6748F96016A9C632FA6415AEF3306E7440CBB503859ED5C02AA24F79F73750585C7CE4535F3C64089924DAAA953E032287D660570A82E41CA84B6EC2942CA89AA56A3622FC7F95EECAAEA312E555750DAF0EFA695AD30975B853200A849FAD94B60C99C21AD683C388F9B8C3C3637AAA45F87636794C531D11E34E2B0C5D6379189AAF12BB7FADAAF6D03C26E72A2E0F1BBD3EEA56D8CB6580F7E8A6A2A3C03A9223581DF7FF84EC1CE0F1F4F6F448FBAAD5C001E76EF325F2BA9473DE7794D4F5CAE6BFDCC6896A2382F658807B722DCEE7360BE78E73048E71F7EF5EDB341E1FCDBBF88FFEEC5DA9AE84B44F379AB337F4CCACCBBABDA6A0ED152B9BBA1594289017C4A739632B8D1FC71EFFB65DBFB82AC95FBF9FDAAE35AD0896F7155BA29EF6E3DF97065661F0FCE4C8CDA20FF035B675E1788B2F50C5E280CC65EB4D9F4EAE5CEDD6E17CFC721702EBD150C9983447898953F663DD3D2F20D76BE4C800089B6432E23A46EE66B7B1A4D8548E03459071483D3186790453DC63EB637CE58BD46B9D2183DBAE6743A99BBF36A693B4193F7135D59CDF859D3FC7D4B531033BE48361BD4FAB2D3A8F8BA34E4AB5BE86719B0DC1DB2FF2F3FC1D32DE025F4E0DFD860D7DEBC5FA6FA932A3FB39A7FD85A0C3F1E962D2E8BBBA6334AF01F07F98A6C5CC4F2DE5258021DE25BB14410828F9122E0140229AD15DB5878FE1ADD7E5DF0725ADE644EA84F12488DDA725EF52A4C565FEBCD3632B2F72D567310980406DDB0EC59A654121DA8C7D19193DE9054E2F0D7F94DF08CED81A7B2C2C7A3462FB63BE887FB42B6BC2F5ABBD5D65E749824807AFCF41B0DC3D0A552C661C079DEC7C41A2153263045F758EAA8235E7AB0CB7222736359022DB2CD31A942181D5EDCC61081C7F023DDC9C61D3E969028771448B6D008E396B27DF042879F782D3D483FB0919A561A8A0E99C6585F890FBDF51434EF6805B6D6805C590791788424A5B12508141FCD1070D170E38E4048068C8E3ACB51B64BFD61A041385D353607D34CBCE5DC353869D97C68D5EB4532B3E8F4F9C3C87E6C20F5D3AC8DC1EF00694E47833ED789503A8D3FEEBAE5B87E4BD3C343C112FE228CB538CBC77A85CD66B10C5F35FB7C5076F900F7CAB2A191926FF2BDA710FF04DEE8EA34558D0FC7A8703FD7ED16819C33D43DF1F817A5BF5E76FFF20B374350374CF799E391EE3C6177F3753B5646EDEB380C88FC1DBA6CFF3126524AE3470356FC616F17705DBD68F92E2B4649EBC0A70A6216D623826E9D8C362607ED7D90FF10F9BACFFDFEB96A7844F50FBB5F4B5FCD6FE3035D53E3710DC2E991A830259B4135EDB8901C2A82595A58CF4FD2D181CCCCECF9BDDE37487543FE190E912846BB736CC1FC3615E2A6BA5549BF390C7A0F900D1B73D03E74EBE59ABA52733A1CF854E3DA386895654C60B18DF71D1AD315C221374F93E9104AC86AC288CEAE4778C91D245C3B9C1E39408A3F61D6ED162750B8BC3BDC62E93D79A94F26491FFED510EE0495B341FF76BE3F564B52A70F550E9DF60FA618AE539E4CF7D4F789F91D8D8F98F9480BEB7C96C43E15819D952DBC179983447898DE6FFBF4ACA956D15A93D785F43C593C266BDDE2DF07E56D6741916AB5BF31223723D169FBD607A5C3EADA3B7A8A6B3D1027DAC7F507CC3C1EC628E97D0232CCFF4845DDA9BAABF4A7270A1C9D594871C8CECE96BD610EF65760F1A3B24FC7F2A8352EABE4377AE71A80F0CE64CE79D29A9BFAD5967D7576020F71E91529B15BB1C0CC447271B049D78D00EFE24561D4A1CB59A4A9EC155B1B8C592A16EE205E667E085E65A1493B4737177624435C3A705FF7C7839793B5DC351BA764E8863C75C11D454CF8C8595F96E66E1665494328835036CAE16F6B8CB741189A014680A978F28EA023F52A229F1370ED30E459E5AE95911A90A50E8A48A4CB2E186DAF5110D38BED0657F33934F902BF106A1F6BB3DDF5009698097561CFDE2ECEBDC0630FF6CE488DA55775B5EC2C66E90F7757C09C1317CE9A7DCCCC704550CA56FAFB319107FE1975329D63CA00BEA15B35760B6EB9EE09DBEC5E3679BC45B8F2B8976E82FD517AACDF85FE70C5E5783D619AB70BA08FDA28538E32E3FB051CE406C8DEF7F12C6A2DCA601D237D54E1A5B0A794C9F7EE3A81C9F84C9D93A57336F99A7172375E76A774787B31AB51E7ABBB93843E8CCAEDD75634594A8B89187B243E5C884146120A0E69EABF075D4EDD11A1C04E3EBEDDC5CCA1759AE7ABA488E8438716AF94E8F52DBDA1F055B81332206E61DF53663DED16C4EAEF2B17A5F61AE0D0ADC2FAB55693C9C837C7F69D83BE1FF72BFAA986E9F8B961934CECB704C83B30193B7255D53D7BD9A5EDC31013C687E57DC93807CCDCFC4049883C0DAB1E8780C9E80A5A95305E4A6A5B0A68E060CEB978E2BF17086A2E79A48840721C9B3A9507D2AEA55BB6E2A796F2BD3E8EC82F175C6975AA4DA71D5DB0130B8A453CA1065AFBD0A5FC7D254862A0C3AB33CF17754FA63B05B3471E2584730683DBD23B48EEE6A2DBE3F1E1A587BF8DF76D77922A11DDD6AFF3FD02A62E288FE942037F04E14F9C1650132459B9F89FAC995A71BE741659A02DCAFEDAE3468383FE449543357EE843FE9E163981C34B78744D72DED7194FF67043A3B26759DCA684827E26379F141E0C4D8803B8E7A1E81B848B6CF706F0C4C8FA5FEAC9E7F56567615FF3AEF96A1B640D05E064668B8821295EC285B7A40F8CF26875AB116C397B578A971CD346CD81298D7A51B6D9A2C07D84A5A08F4F4254B9945CAE082C29412DD0DC4FA22E44B27DCEA83CF407FE5CAFD9F336A0F1668C556405976E8ACA2FEEBA610F95243A4ACBFCB1935E06D1294F73F4AD75542A68E909EDF896911C920FAD7D4F64315D5A53CE14E71E6D7ABE804A5236C902B81D01D60CFAC6BD6FB8B66C9672610DDC255C332FD37073B1368EA8CE998528E0B058FCAEBB9EA3BFD5CEB3E16027911517AC9DE8DF64E6A2EA4621CF41EA7FB4EFB906B14CBF03C9FD9C52E7EE49204FD853B7CA707AED97751CB3CF072C3611F4E2203A37B2B3F2579D7AE81C37C9F105B1181723C54BAF38C99FFB16F6D0F8366C6C2FC8B19CD13431A7376E355A46D22CD23F9FF3FF6C447D696B680F610CFF314384F4AF901C00DFDD3D6F5C6F8E9EAEEC710C96FB64C4D22FE8F7188A89C6BDFF561999B39FD87432F71C9C990A9360998326A30D6F483BDB44ABE990D88D1019AA4B2EA6C9902BB4418AD9026CD5332C534491CB814166E426EB8B260892BA96DBD4D061545AB720C8AD3394C1969A2FBBC68C22F2C28BF1951FCC647A45763CA912131F4BDB33E25DAA647814D6681815C69AFEC67D667F0585745F960DD7A785EC1901D1BF3741AE4064FED7A794EB0EE51069C706178AB025EA88E9DF310AB8F16DB140CD73C359FC480E1FB1A54CCC3AF99ECFEB0F0D34BD883BCFBDF874608594B670300464DF32046256C09B8D79F64A6C6AE0D9970EE1C9E2FD41500F2C65D704F68D55A7292514AFF174A605ACDB7A760B3541DA4EB048E70FA2F464BA45D91C9925839136D238E8F041013EFE1FD0AF161BF89CD4C0867E22BBB7F0FA4247C3BD1AAE7A0681A28AA4D6EB57280F2B2D9DAD4DBF39FCF0765C69AD8342CE8F1136A39170B42A0B982BA31630876DE56532C1FCA04378005C27FCE911ED3A9EF4DECF11347F729F171CE7AC33BDCC5519987B30E5CFFAAAAD20CE68034B884ACCE21BF4ECECD88888C7AC3FCFE65C4DF67A96DF296D71EBDA66B0A71624D5DC734AE3AC5EEE66DD264F6C9F7B6578F51BDE08FCB5D14B4D9C6015C1EBA94C7C573F0711EF0789D80A25A4306EB72BB080926C1C73FD44C20F4FEF9B7C86E33ED915022BEBE2DA8177D46819992137F65D5C1A0AE5704C6240F542DF0F81E35975FF8F0A8B4645AC9663ECED4086A4A87C3EAED375A23C5FB00D23A259C67FBFA976D0603C06AE48FB017EA63243AA6E466402931C90D722988D44529B002B42235E220C127FD9BB929F92B7850AB4020DE47821D79AA45C0F23B182009366A02C4CE22B0906EDEDFF46A7F98CB1F47F24AFAA6BFEE30FFE00B79B3EC7E84A84BCB6706195FF94B35858AEFC5EF3905924C6F80A0CE5C706BE4902B7AD00FCF75410E6A6F31A2F84D929ADAC102715645ACC6DBC48F7BEA7D38B25C60F8A45AA1F18D25933FC1483A6D9172ACF2195F4979FEFCCB04BB43F5F229B7C4F8BCE408AF4AF072CA731D936DAF1BEA9FA4F99B4132E14AFD708C0B68B740C8D3CC44E1C22105156286C180198E0D6F0380CE7EBFF275C7FCC5D6AC1853E05CD17A269CD79BBA9E7939AFCFB4C711A25C0029B6136A2E94EA451CB3E1EBC4FB1D4EAC1C94D11DE4A687FE2B68B28AE90E6F1AE0AFD99B4F7170F261A9C35817CA3D6351E2479FF4F0812A0386E1ACFF8BB118DFA1C0A68B03BA8AF517F07D8AB92B072C5D8DFFB315E27346B5AEEB06DB56614A04BCC8D83B1E359C471B98FDC501948BA61E722542FD840705B78FB83B788CF67DE58A0CD3DBA4D3A78F2E5666E3B1FF47173A3E4CAB718847F92A83ECF42D6945739631C1B27503DB75CFA3102636D71FFD6E908364C5B86E057ED8648521720AE0C8813EC30B4EC806319749753EF93200E7A3DF903EBEE2F41809881F98F0225F2C0C4D9CC607C71939D9A1843A679A12E1D2EED9136E7EDC32A5681EA8B056A58A00E8B2999B263B734ED6FBBB1FBBC4C7B8930D6DB7F2FE6C191C3C31389CBFEDDCDA2830A142353D9A1BD8ED124570E9A717CE6D81C00BAF05F67E72866AF476C3164B3A9C519D0F4FA708B3512C51642EDC28E8101AF90B226636F65C48C7C77108C41B6EAAEC5316B45E7399A94470C5BB82CFAEBE31EADC652EB03FFA8EE4E2A5564953154ADAB3FFDD9DB3A4818BB59DC44C426551AE73734FBBEE6059CC7F03871B77F269D70721E49CE166F318CB168CB5356777CBEDD052B39B215ABE86FD7814C952DABC9778681B5FE6F320E6FE647066BDB7C6022BCC5A3A6D93F5C522224ED59C84224F42914B8D36FC2B056A1B9638C21D0D5916AF127722EE62DC2EB9B301A403CE52CC79482E7EAB1458548EA421FF3BB55810EA8AF50B27923ADCAB9A91A18BECE90C78C221897DF22607CE9EFF70F1CDA8B0E526E5AF29BA74782FF479C799EF94D349B8D5BFCF9F5CEFAB2E83444420998F025E5A1CDAAF9B6B0F99F65A4F159B73A48399D42A44A3536267C1C48AA8B44085AA5EC7D268FAA444A493BE3FFAA9F9705E566BE94911ACFB7993882F8D3D1205891AF008F869DFAC6C1075E5D3CFA02C407E1B97F733C3F246F5A89A2DE8F4C757BCB7749F4E15D98A1EF2759E0732737CD35901AAE3F4379ABBA45BAFC746955FF4F9A832B9FAE8BC922EA907E0F44BEB073A935F51FE03C0155D5A186C4D65B71AB8C34B3714BA3E0231B7A7731C26BD7082984698CDCA42E82D2CC31AA96FE65E0F85E4309F7ED8E523110054B32F974BF2066B1E951EAD7C2AEB32E06B6B23AAE2E5F04CA39D9D4BCD6FF3EC7F8721418754358B7277F8438BFAD7FF11A3751D2154CBE9AE13421DBCAC30790AA6450C3243BD47DD3B49435F6B60DD34CC0B1990BF3239AA76D16CC27BD4EFAF0A7EA310B40DFB5EA6018B9EAFFFAAA08855A074167E8D9417A364E50AB1B4CC4754A99ABEF84AB9CE795D22F7D01B6215F12A91A861AC1A6321828C9ABED69A65B1E0AB7C80B45D39B4D1E81BED5AF48DE3E75C9DED03813B80881DCF5C8A4FFB0B1BDED183A562D7A8C97E96A417134B0A8D72E10E254686ABDC161E08AA461FFB750E20F68762ECC5A6B1F849DE2440430F122AA84172F994E346D398548A42F9A9CA03C7287E78627EC21F2E0BAB7957236113E396454DA6EDA907E4B76BE1F0B85494F7631966FAA3ABB033DB777A8D390614A5E5F8525E580E35ABFB5CC3A1EFCE7CADF8E7411E87711BE72A200667320C3E9BC8F94338F04AE3B4D2C5206C4F12A6465936627FC93F107FCC18FF2D4F06414757F9924EC4EDD848F47C5A7EA8005F967984D5F44947A895656DD19C0024F653B437A29ECD53283B2CA855A0555CBA2F38F02FB0B7029FFFF7436D346C3FC90CF5ADE3C85B646C2C468BC2F5DFCCB1D2F9B3CC4B5068B484D151468291B7F869F9C42F566AA012189BEC00C8A7D448CEDEF63A9A0F379359E249C93289BDCC71D172337616D96EB5FC6BFCB651F024837EBCEAC5D0D00ECE25BDE35C380DC073B51F9F8DA39EC0738885BAF6068C23275C8D60BC26C33567DAFFE7090DDAEF272A5470C0F6FB4542548B7669B5A1EC433BCA09F95D8DE7F1E4375351E1C720B2B386B4F8D86BD6B77A618A797C132CB95ED5AF33360E71CB7E554143284DB11F0E4E503D5A0A37A5A692F1E0D74099D248ED3619D523BA2D18FCE304C24A9C9DF4AE43BCC304D1218919271614A047118D29E57E2DD6FFB5639B2D463BC7662E3D96493B8520D4D72630B0934FED3775464F9D6A62E3D58231AB2675AD5C566381E18FF7FB38024AAD60FFC223709123BF61CAEB4268924D78FF9FBD53CBD0F1DFA6D19537729C0CF0BFCB32C74CA12FA3FF11D8F03D416E16CC1B6C2D3B7E0D6F60B55E942746B000B833954B89F09EC81231F6505AFFFC5FC6AED12EE00FE134C9A0D4D925050F9F9118B2F7E627E4AC3379F7566EA6A43266564565CC9159B4EE80F675B1B684FF82F409091E2413D57E287B3D35C8F92176A34B0DF8921CF0C4D6B22D211B29A502E39EC406C83E3448CB4D7E36B8962BE9D23765870198288CC937D38EAE4519EF1761FB79ED64E44A54DAD144A16D93FD92127AC1C38BA3B9994F35B77CFFE9F8C4A4DB0A3D5FB93108FFCCF890EF4DD9314C0FEA2E6B9BB9AD61C61EF22081F24773DC79E88F82DF14DA4823DE04C13F9219254CD7C51C290EB1795DE8A5AB3C631A6FD95555DB8B7AA8B903A99CE014D7179EC339274EF8ADF95139F34645C734ADE8BFFA2AAE5C1CCEAE38906FC811E116C74022AF8A52AC98499B440F020B8D57A4C7AB2AC09E916798F419CAD425CD8E3D1280B128C1C1A32E0B3E633B4A57D7342515BA3A5E37E7888AFEB8B0859BEE1727AF6D83DF2748B3E6BD84403EAC558BC345C23B0E6A05931F6157E8C7D21A4D1782A0355794D94CEDA24255F3D85D854D637D8A009F1E3BE2FCF3993A3747E6E0F444D1E3DD1935B5FB1D6F9235088C5E57DA436AE368CDF3BA62AFBD15B2BBBBCFF74722E9FB0348FB248E987B8CF6584E2698BB82BE34992E8C8805C9149CEC5D0A83DE33CF93AA84D3FD0BDC9B3F666A24F650D68B4CF7E0BCF222AB2A3F0EE733BEEC3C9169A23BB4AF92DD3E2A335AB2A29492DBF941394FD96B5D94333F4527ACBC2ADD000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%!FontType3-1.0: PingFangSC-Regular19 dict dup begin/FontType 3 def/FontMatrix matrix def/FontBBox {0 0 0 0} readonly def/PaintType 0 def/StrokeWidth 0 def/BuildGlyph{save 3 1 roll1 index dupbegin/ShowProc get 3 1 roll1 index /CharProcs get exch get exec7 -1 roll execendrestore} bind def/BuildChar{1 index /Encoding get exch get1 index /BuildGlyph get exec} bind def/$SP{3 -1 roll dup /SetupSubFont get execdup setfontexch 0 0 2 index stringwidth} bind def/$SPW{4 -1 roll dup /SetupSubFont get execdup setfont3 1 roll 0 0 0 4 2 roll} bind def/$SPTW{5 -1 roll dup /SetupSubFont get execdup setfont4 1 roll neg  0 3 -1 roll 0} bind def/$RP{6 -1 roll dup /SetupSubFont get execdup setfont 5 1 rolltranslate -90 rotate 0 0 0 4 2 roll} bind def/SetupSubFont{dup /PaintType get 1 index /StrokeWidth get3 -1 roll /$SubFontArray get 4 1 roll3 index 3 index getdup /PaintType known{dup /PaintType get}{0}ifelse1 index /StrokeWidth known{1 index /StrokeWidth get}{0}ifelse3 index ne exch 4 index ne or{dup length 2 add dict begin{1 index /FID eq {pop pop}{def}ifelse}forall/StrokeWidth exch def/PaintType exch defcurrentdict enddup /CIDFontName known{/Anonymous exch /CIDFont defineresource}{/Anonymous exch definefont}ifelsedup 4 1 roll put}{ pop pop pop get}ifelse} bind def/ShowProc{systemdict /rectfill known{0 setcachelimit}if6 -1 roll dup /FontMatrix get exch /FontBBox get aload pop4 index transform 4 2 roll5 -1 roll transform 4 2 rollsetcachedevicemoveto dup type /stringtype eq {show}{glyphshow} ifelse} bind def/FontInfo 4 dict dup begin/Registry (Adobe/) def/Ordering (Identity/) def/Supplement 0 defend readonly def/FontName /PingFangSC-Regular def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /gid3576 putdup 34 /gid2322 putdup 35 /gid1602 putdup 36 /gid6963 putdup 37 /gid3379 putdup 38 /gid2678 putdup 39 /gid6924 putdup 40 /gid1674 putdup 41 /gid7623 putdup 42 /gid122 putreadonly def/$SubFontArray [/AAAAAO+PingFangHK-Regular findfont ] def/CharProcs 12 dictdup /gid0 {(\000) 0 $SP} 2 index /.notdef 2 index put putdup /gid122 {(\001) 0 $SP} putdup /gid1602 {(\002) 0 $SP} putdup /gid1674 {(\003) 0 $SP} putdup /gid2322 {(\004) 0 $SP} putdup /gid2678 {(\005) 0 $SP} putdup /gid3379 {(\006) 0 $SP} putdup /gid3576 {(\007) 0 $SP} putdup /gid6924 {(\010) 0 $SP} putdup /gid6963 {(\011) 0 $SP} putdup /gid7623 {(\012) 0 $SP} put def end dup /FontName get exch definefont pop%RBIEndFontSubset
/PingFangSC-Regular cguidfix
/F1.1/PingFangSC-Regular renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /h put
dup 34 /one put
dup 35 /two put
dup 36 /three put
dup 37 /four put
dup 38 /L put
dup 39 /S put
dup 40 /T put
dup 41 /M put
dup 42 /C put
dup 43 /N put
dup 44 /p put
dup 45 /k put
dup 46 /t put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<

206A61645258238A592FFD2DB800192C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8001A2C2020456944B001602020457D691844B001602DB8001B2CB8001A2A2DB8001C2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8001D2C4B535845441B2121592D00020033000101CC02C8000300070065B800142BB800082FB800002FB8000810B80006D0B800062FB900020003F4B8000010B900040003F4B80009DC00B800014558B800042F1BB90004000A3E59B800014558B800052F1BB9000500043E59B8000410B900000002F4B8000510B900020002F4303101211121131121110199FECD013333FE67029AFD950299FD3902C7000100570000016402C5000A0023BA0001000900032BB800011000B800012FB800002FBA0007000800032BB800071030312111230E03231533110164410726374424B802C528341E0B44FE0400010018000001EE02C5002B0091B8002D2FBA0001000000032BB8000110B8002D10B80022DCB8000BDC410500DA000B00EA000B00025D411B0009000B0019000B0029000B0039000B0049000B0059000B0069000B0079000B0089000B0099000B00A9000B00B9000B00C9000B000D5DB8002210B80016D0B800162FB8000110B80018D0B800182F00BA0018001500032BBA0027000600032BB800271030311333263E0233321E0215140E02070E03072135213E03373E0335342E0223220E022C55010F2235251C322516172D442D254436230501CFFE940627374221213E301D233C512E38583B1C01CA203F321F12222F1D2538302F1C163242593F4B21332C2714152E39482F324C331B26435C000001001DFFF501FE02C5003E0123BA0010001100032BB8001010BA001B000800032BB8001B10410500DA000800EA000800025D411B0009000800190008002900080039000800490008005900080069000800790008008900080099000800A9000800B9000800C90008000D5DBA001F0011001B111239BA00220008001B111239B800222FBA002C00110010111239B8002C2FB8002DDCB8002210B80035DC410500DA003500EA003500025D411B0009003500190035002900350039003500490035005900350069003500790035008900350099003500A9003500B9003500C90035000D5DB8001B10B80040DC00BA000D001600032BB8000D10BA0027003200032BB8002710BA003A000300032BB8003A10B8000310B80001D0B800012FBA001F0003003A111239B8003A10B8003DD0303113153633321E02
15140E022322262723061E0233323E0235342627353E0135342E0223220E020733343E0233321615140E022B01222322DA181B20372818192A381F494C025501213E5836325942273F412A38213A4F2E3551361D02551021332236481625311B12050504019548031123332120332313574537563B1E1B365135405E0E02134A3031482E17223C54331F382A1939391C2C1D0F000002001C0000020302C50003000E0051BA0004000000032BB8000410B8000010B80009D0B8000410B8000BD0B8000410B80010DC00B800052FB8000A2FBA0001000800032BB8000110BA0003000A0005111239B80004D0B8000810B8000CD030312523133313112301152115333533350153EEEC025044FEBD01375060F1015BFEA501D4FE3352A6A64B00000001002BFFF002AA02DB0025006DBA001E000B00032BB8001E10411B0006001E0016001E0026001E0036001E0046001E0056001E0066001E0076001E0086001E0096001E00A6001E00B6001E00C6001E000D5D410500D5001E00E5001E00025D00BA0019001000032BB8001910BA0006002300032BB8000610303101332E0323220E0215141E0233323637230E0323222E0235343E0233321602445F08344E6438527F552C29527C53899E0E5F031E35492F405C3B1C1C3B5B404B6D01F339573A1E3B66894E4E88643996872C4C371F30516D3D386851304C0000000001004E0000022702CA0005001FBA0005000000032BB800051000B800002FBA0004000100032BB800041030311311213521114E01D9FE8602CAFD3650027A00000100500000031702CA000E0057BA0003000000032BB8000310BA000B000800032BB8000B10BA000D0000000B11123900B800012FB800052FB800092FB800002FB8000B2FBA000400010000111239BA000800010000111239BA000D000100001112393031131133113313331333113311230B01505A02DF51DF025A82E2E102CAFD360252FDAE0252FDAE02CAFDA802580000000001004D0000028602CA000B004BBA0003000000032BB8000310BA0007000800032BB8000710B8000810B8000AD0B8000A2F00B800012FB800052FB800002FB800072FBA000400010000111239BA000A0001000011123930311311331133013311231123014D5A020175685A02FE8802CAFD36023DFDC302CAFDBD024300000000010025FFF0026302DB0039008DBA001E001F00032BB8001E10BA0029001400032BB8002910B8001E10B8000BDC410500DA001400EA001400025D411B0009001400190014002900140039001400490014005900140069001400790014008900140099001400A9001400B9001400C90014000D5DB80032DCB8002910B8003BDC00BA0019002400032BB8001910BA0006003700032BB8000610303101332E0323220E0215141E0615140E0223222E0235

345DD7010401004BFEB5FEB80001000000010000C349F3935F0F3CF5011103E800000000B643600000000000D59BEF28FC49FE1F07C304350000000900020000000000000001000003B8FF2B001C08B1FC49FE8007C300010000000000000000000000000000001001F40033022C0057022C0018022C001D022C001C02D2002B022C004E0367005002D2004D02880025023E0002022C00400207004502510043013B000904BE003700000048006E00F601DC0222029002B002FA033A03CE03F40446047805100562059800000001000000100096000900680004000200000000001E00000200042800030001B800142B01BA0002000200162B01BF0003003E0037002B001F00130000001C2B00BF0002004A0037002B001F00130000001C2B00BA00040004001B2BB8000120457D691844B8000A2BB800002B000000
00>] def
/CharStrings 16 dict dup begin
/.notdef 0 def
/one 1 def
/two 2 def
/three 3 def
/four 4 def
/C 5 def
/L 6 def
/M 7 def
/N 8 def
/S 9 def
/T 10 def
/h 11 def
/k 12 def
/p 13 def
/t 14 def
/uni2B91 15 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4127891 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B2145C684A74C06611B00C1FA345EA5AA002A80B57843F114AFEA920B3EC9BE8C9A878C510DA4DD07F53CD7E2D4262173974D4C6D2B188E1BE25F3AC6CC11DCBCF20BD3CDC848CC174C0E235936C9178DED513DC74EB91B158916976A1070B339AFD5B9F3D77F21CE8D844FF0F781DD9FD5AFA96780FCF3715DAD959DA1E60FFDBFCBC1EE233F0806E59C08CB46F40CC0B52F4F586466EEE1487058834256A0EFEAB0D6AD17445534A3EAE020F07FF4580F4BEAFC9D480FFE2701EE6904A465CDF15A8C564BA416E7C5003D9C9DD078DCEE3BB6D1FC8D7DF8298D982CAE5A5122DA0DD0F48401DA25809FA5248027286559F10D099DEE2235CE1AAC13B5072F3AA8AC71AAAE337F34FCB7EAB10B51BED5BB3252D2F5E98C9FD0959805FDFA039032C9BD3CACF65FDC4983AF47A1F8B6893CADA52D9BE708D13CE3C3894361FA81BFB0BC63343A220CFF895B628ABA82FA055230450E09EB6F782FED0CF4D6D490C3719B0B4716D61D67D7E9A99E321765D2B7FCCE4B9E43F7F0735B23F7BDBE0FE132A342E8649B287B7A222CAE4B9C55CEA5898DEEE0C02A248FCCBBB737641A99BE8E9BC6DFF9D0C0B2120324BA7D519EB270764651519C2A1B629A4D75E2773B4A78851FD34AAEF4F34B11073DCB3F3AB63F283675335B75F4AD466923C118D823DD04646E9B6B7762ED66B8053EF31747DA09846995EC70AA42903176F29753CC92E62B021DC606CD76FCC91022AE2727897523078C14CFF6A8629FCEC7A
0489DFD89245B68061B480AAFE8AEF9F82606EE2925D104E802CCE8FA2F3A1301740853CD8078D0C380336A306E82A79744CA7B4C68D63A1B74C56624AF1B281FFCEBDB3598A22734B4AFA03F340E9E1CD80EBD81C8AC574384AA5242359B8B851DFE303083943F7CD2C5B26E590D85D2F73A05C0B9E41C96D9169D45A519EC7BC242DE7451D0D14A9708CE94B902C794FFFF0B1FC918894E10A42853D6ACE1B808DF12EA9EA2D0785440ADB58B7885B21F84881C64CEA55F0451776688169B9A24D2CAB8433CAB954C0FF702674A29ACE8D4DD1BA66259CA10CA1C064C52B987DA759C59AE6D2FBE2AC3EFA4F08B29E9793D14F9EB2C311B0F5FE6AFACC46A43B855971C26542C14C406844E797F721E4B0C3851608AB5C0C32DC6B6C1E795E8F6C3EC5EA702B1FC416817FF2219E0AC80FDFC04AD8C9781FD332B68F52C104DB32D287E65A355022C51A2CF4B86B86B404B16FB5AD504118E3B647934DF7B4F77CF783171019D7D32134FD25A45CEF4C297524E832ABCEB72BCAB59342C454F920BBE2D11C4121F5AFBE92BD615D2B98BCE1F6E4F840A5DF602BB79812210DD797A1A3B5FF63CFDBF260C28FF418688EFAD8E4A02A144E2B4A742549B4EA78839614C4C7705CCAE8229DE321DE8BB282009AC9F58D17BDFD15C068E77A1AD75D6E7E54740817C5B12ED00521F78458DEA7581DBB8B125079691CE46A5B6D7364D550EDE45CD1E277B1868107022ED3FA5504E178960C07E5D93A82248697A98E3056D1864AC0868C9A95A5EB58056E313B59C1EA50660668C16E865B426D2E0518B3958AE6B02019A7403FE0EFEB7351795582F7D9F2BF762837B3FC3BF31245B976101B0DB03519BF79A198CAC37B90A5D0A7F768D2F10DD21D12F6586B8E5FB7A9A2FE0398B45A0A082BB3F88DF7A73D8CC11C42F68BDE751DE1744D0D0826735140F574D4BCBF87D4BAED360ADD86295D558C2206EE1D74116526964973F56343133303164A01F176AF7351F6246C235AAC64592CBC68F276B6A906551D1FC6A305FA28BDFB87D64AC9265AD4F9BA6537A9A1E6D0134864E34A304CC93889CF6D541604EDE31465B486EED9A72FF23357E300A641E89A30FC2E1EC32CEABF0FCA0E59BA389132CC523724676264A57D73C6EF3F14E3368EE342A504569A5146D2191CFDC1742459656E0EEF5438E32E0FA9A12CC07B244BB5E247887CF5F725DE5B180D998232498FFAAD89986EA77152895E32B2BE6DA20A379754F560D2F6109B9FE952D568E514A9AC82F28ADC52CBE4D5DF9D377B518FA8AB595A66012AC1C6FCA1CC581992605570DB9554929F816F3A97E90D90CA91009722EBD2FEFD9A1E5B87850D21BF8FBE69E92A5D55617B4000EC2EB49AABD183E5FEF09D0E0A842EAB45D98856B94C973546D885FA00832D90E3626743A95B8D44873431
A948EA5E8E75496F24710CEF121C6A95266771AC95C9FB3346526F1E6E87CE1C4CBD59E05ED19B99EC6DF0D0F1C2D5CE631585F92CFFBABB18FDBAACA5880474E7D6DB5E24D956F1209B9A0031CA30350CEDE7B3A63F44E6906A7A6555AD55B53651476AC04D678BC1EF512488668E6500E64561447AF61ACE967A789D135F770A2F05E4DB588561F405393DCBE9A6C7AF6ADC270F96B165E8DB6321D558E4C1E7B60541F8C349D0437A2A349F600B1D754A4260D852A69C6C4C7020D9C3237AFA7AA3D9BE3E2E8313BFBF5DE543BC524178B4A95933E7ED231FB448270D19218135C0D420B6712D527BCED935EE9DADD0CD26871C17198FDE55685762ADA3A5D1B2C642312B9EFACD61ECC86142BA9C410B28EB9B1F59B19B2099055E4E12F993FCF3534B09894A09E733A260277FFA7D5F9E0D135E397CCDB0233BB6116DC4450D98102153CEC50E087E7F0FFAAF7D78B6E71A85D95E1FEA95C2B98FAA321F98E352C6D10B1F5F66406E4062FB2C6DAA561C91EBE4FE1217CAA67EFCD32357B4ADFB2DAD8C97BAB75B85623E4D002BD341240D0BAC3198704DA33065962544903691C6882E46A75F4A6E9D61FA5C289B31B23A06528A2854043DF185546422E3EB17E2462733B9EDBFB8965E420D27D6AEBC1D6925942478A9F5287E9286877E8C16FB4EA299AE9E74DC664BFF4D75C4DA8278275ED013793AACDD1233F8B02750C25FFBDA63895A46482259D9154BBBE4D21C56E362A662AE0539291BF3DA699655FC749C2AF954106081BB870C734DA25D70F9C0A72F6B53EA36B3E1EBFDB566CDC9E46F9A99125BA55DB99BED9F344743B5F47DE6C7D3CF2ACB12AB1A2936F0719738CA5687CFE39D6F198219AE31554FBA05A2CA9C0E86AF4DDDB3D856CD31DB0240F6B3FBB03B364E27AD4F369009BEDD9AE5B2D8E7D0870C11F8F3DA5DBBC9C9F5EDEA806E950AC73B743D8381EF7B78F4B8157FA6EDF26DB1B16BEE8F4999A3311F4E22A72CE38D2B54F29C78784E13101BBDD355346D11C4515E0E0A6C9C315F78443948E57DF5E5B7B9CB4B767642F317C4B4BC2D842B50A9C0DE8D0F54D8C341C8FB08892827C73BC77CA5D5043B8CF2216C2B249C66B982B6E160DFDA492044A4141D006DAC8CA50B9FEABDFB101F31F01AA06E991CF2EC718896F6ECB24EB855529778E811A23E89F8A8287171FDF2FDB411
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F2.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 469 221 rc
45 159.43716 m
159.69264 159.43716 l
159.69264 44.744526 l
45 44.744526 l
h
45 159.43716 m
f
0.23999999 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
129 452.56284 m
243.69264 452.56284 l
243.69264 567.25549 l
129 567.25549 l
h
129 452.56284 m
S
0 i
1 1 1 sc
CM
55.208008 148.72916 m
169.90065 148.72916 l
169.90065 34.036518 l
55.208008 34.036518 l
h
55.208008 148.72916 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
139.20801 463.27084 m
253.90065 463.27084 l
253.90065 577.9635 l
139.20801 577.9635 l
h
139.20801 463.27084 m
S
0 i
1 1 1 sc
CM
234.5 88.04705 m
290.28528 88.04705 l
290.28528 32.261768 l
234.5 32.261768 l
h
234.5 88.04705 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
318.5 523.95294 m
374.28528 523.95294 l
374.28528 579.73822 l
318.5 579.73822 l
h
318.5 523.95294 m
S
0 i
1 1 1 sc
CM
241.27968 80.25219 m
297.06497 80.25219 l
297.06497 24.466913 l
241.27968 24.466913 l
h
241.27968 80.25219 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
325.27966 531.7478 m
381.06497 531.7478 l
381.06497 587.53308 l
325.27966 587.53308 l
h
325.27966 531.7478 m
S
0 i
1 1 1 sc
CM
249.07454 72.457336 m
304.8598 72.457336 l
304.8598 16.672056 l
249.07454 16.672056 l
h
249.07454 72.457336 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
333.07452 539.54266 m
388.8598 539.54266 l
388.8598 595.32794 l
333.07452 595.32794 l
h
333.07452 539.54266 m
S
0 i
1 1 1 sc
CM
256.86938 64.662483 m
312.65466 64.662483 l
312.65466 8.8772011 l
256.86938 8.8772011 l
h
256.86938 64.662483 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
340.86938 547.33752 m
396.65466 547.33752 l
396.65466 603.1228 l
340.86938 603.1228 l
h
340.86938 547.33752 m
S
0 i
1 1 1 sc
CM
264.66425 56.867626 m
320.44952 56.867626 l
320.44952 1.0823447 l
264.66425 1.0823447 l
h
264.66425 56.867626 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
348.66425 555.13239 m
404.44952 555.13239 l
404.44952 610.91766 l
348.66425 610.91766 l
h
348.66425 555.13239 m
S
0 i
0.85490203 0.85490203 0.85490203 sc
CM
115 73.437164 m
143.69264 73.437164 l
143.69264 44.744526 l
115 44.744526 l
h
115 73.437164 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
199 538.56281 m
227.69264 538.56281 l
227.69264 567.25549 l
199 567.25549 l
h
199 538.56281 m
S
0 i
0.85490203 0.85490203 0.85490203 sc
CM
55.208008 148.72916 m
169.90065 148.72916 l
169.90065 133.72916 l
55.208008 133.72916 l
h
55.208008 148.72916 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
139.20801 463.27084 m
253.90065 463.27084 l
253.90065 478.27084 l
139.20801 478.27084 l
h
139.20801 463.27084 m
S
0 i
1 1 1 sc
CM
401 178.34167 m
416 178.34167 l
416 23.549677 l
401 23.549677 l
h
401 178.34167 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
485 433.65833 m
500 433.65833 l
500 588.45032 l
485 588.45032 l
h
485 433.65833 m
S
0 i
1 1 1 sc
CM
448.5 133.67084 m
463.5 133.67084 l
463.5 68.220512 l
448.5 68.220512 l
h
448.5 133.67084 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
532.5 478.32916 m
547.5 478.32916 l
547.5 543.77948 l
532.5 543.77948 l
h
532.5 478.32916 m
S
0.5 w
1 J
1 j
[
1
4
] 0 d
0 0 0 sc
492.5 433.65833 m
540 478.32916 l
S
492.5 588.45032 m
540 543.77948 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 199.5 192 cm
/F1.1[ 9 0 0 -9 0 0]sf
-9 3.5 m
(!")[ 9.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
254.54077 107.80614 m
300.40875 107.80614 l
300.40875 107.80614 l
303.57523 107.80608 306.14218 110.12802 306.14224 112.99232 c
306.14224 112.99239 306.14224 112.99245 306.14224 112.99252 c
306.14224 204.31361 l
306.1423 207.17792 303.57544 209.49994 300.40897 209.5 c
300.40891 209.5 300.40884 209.5 300.40875 209.5 c
300.40875 209.5 l
254.54077 209.5 l
254.54077 209.5 l
251.3743 209.50005 248.80733 207.17812 248.80727 204.31381 c
248.80727 204.31375 248.80727 204.31367 248.80727 204.31361 c
248.80727 112.99252 l
248.80721 110.12821 251.37408 107.80619 254.54056 107.80614 c
254.54062 107.80614 254.5407 107.80614 254.54077 107.80614 c
254.54077 107.80614 l
h
254.54077 107.80614 m
f
0.23999999 w
0 J
0 j
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
338.54077 504.19385 m
384.40875 504.19385 l
384.40875 504.19385 l
387.57523 504.19391 390.14218 501.87198 390.14224 499.00766 c
390.14224 499.0076 390.14224 499.00754 390.14224 499.00748 c
390.14224 407.68637 l
390.1423 404.82208 387.57544 402.50006 384.40897 402.5 c
384.40891 402.5 384.40884 402.5 384.40875 402.5 c
384.40875 402.5 l
338.54077 402.5 l
338.54077 402.5 l
335.3743 402.49994 332.80734 404.82187 332.80728 407.68619 c
332.80728 407.68625 332.80728 407.68631 332.80728 407.68637 c
332.80728 499.00748 l
332.80722 501.8718 335.37408 504.19382 338.54056 504.19385 c
338.54062 504.19385 338.54068 504.19385 338.54077 504.19385 c
338.54077 504.19385 l
h
338.54077 504.19385 m
S
0 i
1 1 1 sc
CM
253.10988 201.58044 m
265.37485 201.58044 l
265.37485 189.31548 l
253.10988 189.31548 l
h
253.10988 201.58044 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
337.10989 410.41956 m
349.37485 410.41956 l
349.37485 422.68451 l
337.10989 422.68451 l
h
337.10989 410.41956 m
S
0 i
1 1 1 sc
CM
253.10988 183.183 m
265.37485 183.183 l
265.37485 170.91805 l
253.10988 170.91805 l
h
253.10988 183.183 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
337.10989 428.81699 m
349.37485 428.81699 l
349.37485 441.08197 l
337.10989 441.08197 l
h
337.10989 428.81699 m
S
0 i
1 1 1 sc
CM
253.10988 164.78555 m
265.37485 164.78555 l
265.37485 152.52058 l
253.10988 152.52058 l
h
253.10988 164.78555 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
337.10989 447.21445 m
349.37485 447.21445 l
349.37485 459.4794 l
337.10989 459.4794 l
h
337.10989 447.21445 m
S
0 i
1 1 1 sc
CM
253.10988 146.38811 m
265.37485 146.38811 l
265.37485 134.12314 l
253.10988 134.12314 l
h
253.10988 146.38811 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
337.10989 465.61188 m
349.37485 465.61188 l
349.37485 477.87686 l
337.10989 477.87686 l
h
337.10989 465.61188 m
S
0 i
1 1 1 sc
CM
253.51872 127.37742 m
265.78369 127.37742 l
265.78369 115.11246 l
253.51872 115.11246 l
h
253.51872 127.37742 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
337.51871 484.62259 m
349.78369 484.62259 l
349.78369 496.88754 l
337.51871 496.88754 l
h
337.51871 484.62259 m
S
0 i
1 1 1 sc
CM
277.6398 195.44795 m
277.6398 195.44795 l
277.6398 198.83484 280.38541 201.58044 283.77228 201.58044 c
287.15918 201.58044 289.90479 198.83484 289.90479 195.44797 c
289.90479 195.44797 289.90479 195.44797 289.90479 195.44795 c
289.90479 195.44795 l
289.90479 192.06108 287.15918 189.31548 283.77228 189.31548 c
280.38541 189.31549 277.63983 192.06108 277.6398 195.44795 c
h
277.6398 195.44795 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
361.6398 416.55203 m
361.6398 416.55203 l
361.6398 413.16516 364.38541 410.41956 367.77228 410.41956 c
371.15918 410.41956 373.90479 413.16516 373.90479 416.55203 c
373.90479 416.55203 373.90479 416.55203 373.90479 416.55203 c
373.90479 416.55203 l
373.90479 419.93893 371.15918 422.68451 367.77228 422.68451 c
364.38541 422.68451 361.63983 419.9389 361.6398 416.55203 c
h
361.6398 416.55203 m
S
0 i
1 1 1 sc
CM
277.6398 177.05052 m
277.6398 177.05052 l
277.6398 180.43739 280.38541 183.183 283.77228 183.183 c
287.15918 183.18301 289.90479 180.43741 289.90479 177.05052 c
289.90479 177.05052 289.90479 177.05052 289.90479 177.05052 c
289.90479 177.05052 l
289.90479 173.66364 287.15918 170.91803 283.77228 170.91805 c
280.38541 170.91805 277.63983 173.66365 277.6398 177.05052 c
h
277.6398 177.05052 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
361.6398 434.94949 m
361.6398 434.94949 l
361.6398 431.56262 364.38541 428.81699 367.77228 428.81699 c
371.15918 428.81699 373.90479 431.56259 373.90479 434.94946 c
373.90479 434.94946 373.90479 434.94949 373.90479 434.94949 c
373.90479 434.94949 l
373.90479 438.33636 371.15918 441.08197 367.77228 441.08197 c
364.38541 441.08197 361.63983 438.33636 361.6398 434.94949 c
h
361.6398 434.94949 m
S
0 i
1 1 1 sc
CM
277.6398 158.65306 m
277.6398 158.65306 l
277.6398 162.03993 280.38541 164.78555 283.77228 164.78555 c
287.15918 164.78555 289.90479 162.03995 289.90479 158.65308 c
289.90479 158.65308 289.90479 158.65306 289.90479 158.65306 c
289.90479 158.65306 l
289.90479 155.26619 287.15918 152.52058 283.77228 152.52058 c
280.38541 152.52058 277.63983 155.26619 277.6398 158.65306 c
h
277.6398 158.65306 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
361.6398 453.34692 m
361.6398 453.34692 l
361.6398 449.96005 364.38541 447.21445 367.77228 447.21445 c
371.15918 447.21445 373.90479 449.96005 373.90479 453.34692 c
373.90479 453.34692 373.90479 453.34692 373.90479 453.34692 c
373.90479 453.34692 l
373.90479 456.73383 371.15918 459.47943 367.77228 459.4794 c
364.38541 459.4794 361.63983 456.7338 361.6398 453.34692 c
h
361.6398 453.34692 m
S
0 i
1 1 1 sc
CM
277.6398 140.25562 m
277.6398 140.25562 l
277.6398 143.6425 280.38541 146.38811 283.77228 146.38811 c
287.15918 146.38811 289.90479 143.64252 289.90479 140.25563 c
289.90479 140.25563 289.90479 140.25563 289.90479 140.25562 c
289.90479 140.25562 l
289.90479 136.86874 287.15918 134.12314 283.77228 134.12314 c
280.38541 134.12315 277.63983 136.86874 277.6398 140.25562 c
h
277.6398 140.25562 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
361.6398 471.74438 m
361.6398 471.74438 l
361.6398 468.35751 364.38541 465.61191 367.77228 465.61188 c
371.15918 465.61188 373.90479 468.35748 373.90479 471.74435 c
373.90479 471.74438 373.90479 471.74438 373.90479 471.74438 c
373.90479 471.74438 l
373.90479 475.13126 371.15918 477.87686 367.77228 477.87686 c
364.38541 477.87686 361.63983 475.13126 361.6398 471.74438 c
h
361.6398 471.74438 m
S
0 i
1 1 1 sc
CM
277.84424 121.24493 m
277.84421 121.24493 l
277.84421 124.63181 280.58981 127.37742 283.97668 127.37742 c
287.36359 127.37743 290.10919 124.63182 290.10919 121.24494 c
290.10919 121.24494 290.10919 121.24493 290.10919 121.24493 c
290.10919 121.24493 l
290.10919 117.85806 287.36359 115.11245 283.97668 115.11246 c
280.58981 115.11246 277.84424 117.85806 277.84424 121.24493 c
h
277.84424 121.24493 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
361.84424 490.75507 m
361.84421 490.75507 l
361.84421 487.36819 364.58981 484.62259 367.97668 484.62259 c
371.36359 484.62259 374.10919 487.36819 374.10919 490.75507 c
374.10919 490.75507 374.10919 490.75507 374.10919 490.75507 c
374.10919 490.75507 l
374.10919 494.14194 371.36359 496.88754 367.97668 496.88754 c
364.58981 496.88754 361.84424 494.14194 361.84424 490.75507 c
h
361.84424 490.75507 m
S
0.25 w
349.37485 416.55203 m
358.28983 416.55203 l
S
0 i
360.78983 416.55203 m
358.28983 416.55203 l
358.28983 415.61453 m
360.78983 416.55203 l
358.28983 417.48953 l
S
0.60000002 i
349.37485 434.94949 m
358.28983 434.94949 l
S
0 i
360.78983 434.94949 m
358.28983 434.94949 l
358.28983 434.01199 m
360.78983 434.94949 l
358.28983 435.88699 l
S
0.60000002 i
349.37485 453.34692 m
358.28983 453.34692 l
S
0 i
360.78983 453.34692 m
358.28983 453.34692 l
358.28983 452.40942 m
360.78983 453.34692 l
358.28983 454.28442 l
S
0.60000002 i
349.37485 471.74438 m
358.28983 471.74438 l
S
0 i
360.78983 471.74438 m
358.28983 471.74438 l
358.28983 470.80688 m
360.78983 471.74438 l
358.28983 472.68188 l
S
0.60000002 i
349.78369 490.75507 m
358.49423 490.75507 l
S
0 i
360.99423 490.75507 m
358.49423 490.75507 l
358.49423 489.81757 m
360.99423 490.75507 l
358.49423 491.69257 l
S
0.60000002 i
367.77228 422.68451 m
367.77228 425.46701 l
S
0 i
367.77228 427.96701 m
367.77228 425.46701 l
368.70978 425.46701 m
367.77228 427.96701 l
366.83478 425.46701 l
S
0.60000002 i
367.77228 441.08197 m
367.77228 443.86444 l
S
0 i
367.77228 446.36444 m
367.77228 443.86444 l
368.70978 443.86444 m
367.77228 446.36444 l
366.83478 443.86444 l
S
0.60000002 i
367.77228 459.4794 m
367.77228 462.2619 l
S
0 i
367.77228 464.7619 m
367.77228 462.2619 l
368.70978 462.2619 m
367.77228 464.7619 l
366.83478 462.2619 l
S
0.60000002 i
367.77228 477.87686 m
367.87524 481.27411 l
S
0 i
367.95096 483.77298 m
367.87524 481.27411 l
368.81232 481.24573 m
367.95096 483.77298 l
366.93817 481.30252 l
S
/Cs2 SC
0 sc
1 0 0 -1 290.70728 187.09999 cm
/F2.1[ 7 0 0 -7 0 0]sf
-3.892 2.9020004 m
(!")[ 3.892000 0.000000 ] xS
1 0 0 -1 290.70728 168.89999 cm
-3.892 2.9020004 m
(!#)[ 3.892000 0.000000 ] xS
1 0 0 -1 290.70728 149.89999 cm
-3.892 2.9020004 m
(!$)[ 3.892000 0.000000 ] xS
1 0 0 -1 290.70728 130.89999 cm
-3.892 2.9020004 m
(!%)[ 3.892000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -84 612 cm
374.10919 490.75507 m
375.65759 490.75507 l
S
0 i
378.15759 490.75507 m
375.65759 490.75507 l
375.65759 489.81757 m
378.15759 490.75507 l
375.65759 491.69257 l
S
1 1 1 sc
CM
295.0076 131.48434 m
302.0076 131.48434 l
302.0076 111.00554 l
295.0076 111.00554 l
h
295.0076 131.48434 m
f
0.23999999 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
379.0076 480.51566 m
386.0076 480.51566 l
386.0076 500.99448 l
379.0076 500.99448 l
h
379.0076 480.51566 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 277.47476 210 cm
/F2.1[ 9 0 0 -9 0 0]sf
-11.9205 3.3740005 m
(&'\(\))[ 5.004000 5.832000 5.166000 0.000000 ] xS
1 0 0 -1 262.39264 88 cm
-9.7469997 3.3740005 m
(*++)[ 6.498000 6.498000 0.000000 ] xS
0 -1 -1 0 409 101.09084 cm
/F1.1[ 9 0 0 -9 0 0]sf
-18 3.5 m
(#$%&)[ 9.000000 9.000000 9.000000 0.000000 ] xS
0 -1 -1 0 456.5 101.09084 cm
-13.5 3.5 m
('\(&)[ 9.000000 9.000000 0.000000 ] xS
0.5 w
1 J
1 j
[
1
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -84 612 cm
196.55432 463.27084 m
343.24237 410.41956 l
S
196.55432 478.27084 m
343.24237 422.68451 l
S
253.90065 470.77084 m
349.37485 416.55203 l
S
139.20801 470.77084 m
337.10989 416.55203 l
S
213.34631 538.56281 m
380.78528 604.89075 l
S
199 552.90918 m
380.78528 604.89075 l
S
227.69264 552.90918 m
380.78528 604.89075 l
S
213.34631 567.25549 m
380.78528 604.89075 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 199.5 16.5 cm
-9 3.5 m
(\)")[ 9.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -84 612 cm
374.5 523.95294 m
492.5 433.65833 l
S
404.44952 554.95294 m
492.5 588.45032 l
S
382.5076 480.51566 m
492.5 433.65833 l
S
382.5076 500.99448 m
492.5 588.45032 l
S
0 i
1 1 1 sc
CM
11.11785 148.72916 m
11.11785 126.01016 l
1 126.01016 l
1 148.72916 l
h
11.11785 148.72916 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
95.117851 463.27084 m
95.117851 485.98984 l
85 485.98984 l
85 463.27084 l
h
95.117851 463.27084 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 6.0589252 137.36966 cm
/F2.1[ 6 0 0 -6 0 0]sf
-5.9489999 2.4160004 m
(,-.")[ 3.558000 3.114000 1.890000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
11.11785 126.01016 m
11.11785 103.29117 l
1 103.29117 l
1 126.01016 l
h
11.11785 126.01016 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
95.117851 485.98984 m
95.117851 508.70883 l
85 508.70883 l
85 485.98984 l
h
95.117851 485.98984 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 6.0589252 114.65067 cm
-5.9489999 2.4160004 m
(,-.#)[ 3.558000 3.114000 1.890000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
11.11785 103.29117 m
11.11785 80.572182 l
1 80.572182 l
1 103.29117 l
h
11.11785 103.29117 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
95.117851 508.70883 m
95.117851 531.4278 l
85 531.4278 l
85 508.70883 l
h
95.117851 508.70883 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 6.0589252 91.931679 cm
-5.9489999 2.4160004 m
(,-.$)[ 3.558000 3.114000 1.890000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
11.257483 80.572182 m
11.257483 56.755512 l
1 56.755512 l
1 80.572182 l
h
11.257483 80.572182 m
f
[
4
4
] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
95.257484 531.4278 m
95.257484 555.24451 l
85 555.24451 l
85 531.4278 l
h
95.257484 531.4278 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 6.1287417 68.663849 cm
/F1.1[ 6 0 0 -6 0 0]sf
-4.5 2 m
(***)[ 3.000000 3.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
11.257483 56.755512 m
11.257483 34.036518 l
1.1396327 34.036518 l
1.1396327 56.755512 l
h
11.257483 56.755512 m
f
[] 0 d
0.60000002 i
0 0 0 sc
1 0 0 -1 -84 612 cm
95.257484 555.24451 m
95.257484 577.9635 l
85.139633 577.9635 l
85.139633 555.24451 l
h
95.257484 555.24451 m
S
/Cs2 SC
0 sc
0 i
0 -1 -1 0 6.1985579 45.396015 cm
/F2.1[ 6 0 0 -6 0 0]sf
-5.8379998 2.4160004 m
(,-.-)[ 3.558000 3.114000 1.890000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -84 612 cm
119.85892 519.5683 m
99.058922 519.5683 l
S
0 J
0 j
0 i
123.85892 519.5683 m
119.85892 519.5683 l
119.85892 518.0683 m
123.85892 519.5683 l
119.85892 521.0683 l
S
ep
end
%%Trailer
%%EOF
